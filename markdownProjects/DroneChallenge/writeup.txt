2015-09-12
<div markdown="1" class="card-panel white">

**Imagine RIT 2015 Flying Cars Challenge**
=============
##### 9/12/2015

### Introduction
I recently participated in a team autonomous drone challenge for the RIT Meet the Jetsons Event during Imagine RIT. Our drone would perform aerial maneuvers upon recognition of a Jetson Character.  Our team placed 2nd overall in the competition and won a 125 year old antique banjo from the private collection of the President of RIT, Bill Destler.

![alt text](../media/dronechallenge/banjo.jpg "Me posing with the prize"){: class="responsive-img col s6 offset-s3" }
{: class="row" }



### Classifier
In order to detect and Image in OpenCV we needed a Haar Classifier. Unfortunately none of us had any knowledge of how to do this so we received some help from our friend Trevor Sherrad's [Haar Cascade Classifier Training Tutorial](http://www.trevorsherrard.com/Haar_training.html)

In order to do this we had to take a least 40 images of every character we wanted to classify with various lightings and backgrounds. After some changes to aspect ratio, resolution and cropping of the images we finally had an image set that would classify in a reasonable amount of time. We found that 20 passes was the optimal for our project and that took about 7 hours to generate.

### Node.js
In order to control the drone we used the Node AR Drone which is a nice Library that provides commands to control the drone in Node.js.  We also used Node OpenCV which allowed us to use our classifier with the drone.  We ran into some issues with the image recognition because of false positives that would happen because or the noise of an image.  We solved this be creating a sort of buffer for each classifier.  If a classifier had 4 positive recognitions in a row then the drone would perform its maneuver. This cut out a lot of the random false positives that we got.

</div>
